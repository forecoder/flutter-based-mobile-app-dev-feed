schema {
    query: Query
    mutation: Mutation
}

type Query {
    articleDates(limit: Int, offset: Int): [Long]
    articles(limit: Int, offset: Int, filter: ArticleFilter): [Article]
    recentArticles(limit: Int, offset: Int): [Article]

    allButRecentArticles(limit: Int, offset: Int, filter: ArticleFilter): [Article]

    articlesWithNoScreenshots: [Article]

    tags(limit: Int, offset: Int, search: [String]): [String]
}

type Mutation {
    addArticle(input: ArticleInput!): Article
    deleteArticle(id: ID!): Boolean
    updateArticle(id: ID!, input: ArticleInput!): Article

    addTag(input: String): String
    tagArticle(articleId: ID!, tags: [String]): Article!
    untagArticle(articleId: ID!, tagsToRemove: [String]): Article!
}

type Article {
    id: ID!
    timestamp: Long!
    title: String!
    description: String
    url: String!
    domain: String!
    tags: [String]
    screenshot: Screenshot
    parsed: ArticleParsed
}

type Screenshot {
    data: String
    height: Int
    width: Int
    mimeType: String
}

type ArticleParsed {
    url: ID!
    title: String
    author: String
    published: String
    image: String
    videos: [String]
    keywords: [String]
    description: String
    body: String
}

input ArticleFilter {
    from: String
    to: String
    search: String
    tags: [String]
    titles: [String]
    urls: [String]
    domains: [String]
}

input ArticleInput {
    date: String
    title: String!
    description: String
    url: String!
    tags: [String]
}
