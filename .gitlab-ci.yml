stages:
  - build
  - deploy

before_script:
  - apk update
  
  # For CD pipeline
  # Install ssh-agent if not already installed, it is required by Docker.
  # (change apt-get to yum if you use a CentOS-based image)

  - 'which ssh-agent || apk add openssh'

  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - ssh-add <(echo "$SSH_PRIVATE_KEY")

  # For Docker builds disable host key checking. Be aware that by adding that
  # you are suspectible to man-in-the-middle attacks.
  # WARNING: Use this only with the Docker executor, if you use it with shell
  # you will overwrite your user's SSH config.
  # - mkdir -p ~/.ssh
  # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  # In order to properly check the server's host key, assuming you created the
  # SSH_SERVER_HOSTKEYS variable previously, uncomment the following two lines
  # instead.
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

  - 'which rsync || apk add rsync'

build-reverse-proxy:
  image: openjdk:8-jdk-alpine
  stage: build
  script:
    - cd reverse-proxy && chmod +x ./gradlew && ./gradlew build
  artifacts:
    paths:
    - reverse-proxy/build/libs
    - reverse-proxy/build/reports
    - reverse-proxy/build/test-results

production_backend:
  image: debian:jessie
  stage: deploy
  script:
    - ssh -p 1022 ci@rm3l.org "mkdir -p /home/ci/Backend"
    - rsync -ravz -e 'ssh -p 1022' --exclude='.git/' --exclude='.gitlab-ci.yml' --exclude='.gradle' --exclude='build' --delete-excluded ./tools ci@rm3l.org:/home/ci/Backend
    - ssh -p 1022 ci@rm3l.org "cd /home/ci/Backend && docker-compose -p backend up -d --build"
  only:
    - master
  environment: production
